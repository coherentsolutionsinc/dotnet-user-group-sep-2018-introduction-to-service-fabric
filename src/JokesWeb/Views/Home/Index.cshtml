@model JokesWeb.Models.HomeViewModel

@{
    ViewData["Title"] = "Today's Jokes";
}

<div class="row">
    <div class="col-lg-3">
        <div class="row">
            <div class="col-lg-12">
                @if (!Model.Languages.Any())
                {
                    <div class="alert alert-primary" role="alert">
                        No languages to show!
                    </div>
                }
                @for (var index = 0; index < Model.Languages.Length; index++)
                {
                    var language = Model.Languages[index];
                    <div class="card
                                @(index < Model.Languages.Length - 1
                                      ? "mb-2"
                                      : string.Empty)">
                        <div class="card-body">
                            <h5 class="card-title">@language.Name</h5>
                            <div class="list-group list-group-flush">
                                @foreach (var category in language.Categories)
                                {
                                    <a href="@Url.Action(
                                                 "Index",
                                                 "Home",
                                                 new
                                                 {
                                                     language = language.Name,
                                                     category = category.Name
                                                 })"
                                       class="list-group-item
                                              list-group-item-action
                                              d-flex
                                              justify-content-between
                                              align-items-center
                                              @(Model.CurrentLanguage == language.Name && Model.CurrentCategory == category.Name
                                                    ? "active"
                                                    : string.Empty)">
                                        @category.Name
                                        <span class="
                                              badge
                                              @(Model.CurrentLanguage == language.Name && Model.CurrentCategory == category.Name
                                                    ? "badge-light"
                                                    : "badge-primary")">
                                            @category.Count
                                        </span>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Import</h5>
                        <form asp-controller="Upload"
                              asp-action="Upload"
                              asp-all-route-data="@(new Dictionary<string, string>
                                                    {
                                                        ["language"] = Model.CurrentLanguage,
                                                        ["category"] = Model.CurrentCategory
                                                    })"
                              method="post"
                              enctype="multipart/form-data">
                            <div id="upload-list" class="list-group list-group-flush">
                                <div id="upload-controls" class="list-group-item">
                                    <div class="btn-group btn-group-justified" role="group" aria-label="Basic example">
                                        <span class="btn btn-secondary btn-file">
                                            Browse <input type="file" name="files" multiple>
                                        </span>
                                        <input id="upload-submit" class="btn btn-primary" type="submit" value="Upload" disabled />
                                    </div>
                                </div>
                                <div class="list-group-item">
                                    No files to upload
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-9">
        @if (!Model.Jokes.Any())
        {
            <div class="alert alert-primary" role="alert">
                No jokes to show!
            </div>
        }
        @foreach (var joke in Model.Jokes.OrderBy(joke => joke.Name, StringComparer.OrdinalIgnoreCase))
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@joke.Name</h5>
                    <p class="card-text" style="white-space: pre-line">@joke.Content</p>
                    <footer class="blockquote-footer">
                        <cite title="Author">@joke.Author</cite>
                    </footer>
                </div>
            </div>
        }
    </div>
</div>

@section uploadjs
    {
    <script>
        $(document).on('change',
            ':file',
            function() {
                var input = $(this),
                    files = input.get(0).files || [],
                    count = files.length,
                    names = [];

                for (var i = 0; i < files.length; ++i) {
                    names.push(files[i].name);
                };

                input.trigger('fileselect', [count, names]);
            });
        $(document).ready(function() {
            $(':file').on('fileselect',
                function(event, count, names) {
                    var uploadList = $("#upload-list"),
                        uploadSubmit = $("#upload-submit");

                    uploadList.children(":not(#upload-controls)").remove();

                    if (count > 0) {
                        uploadSubmit.prop("disabled", false);
                        uploadSubmit.val("Upload (" + count + ")");

                        for (var i = 0; i < names.length; ++i) {
                            uploadList.append(
                                "<div class=\"list-group-item\">" + names[i] + "</div>"
                            );
                        };
                    } else {
                        uploadSubmit.prop("disabled", true);
                        uploadSubmit.val("Upload");

                        uploadList.append(
                            "<div class=\"list-group-item\">No files to upload</div>"
                        );
                    };
                });
        });
    </script>
}